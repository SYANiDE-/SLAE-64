section .text
global _start
_start:
	jmp enc_str
decode:
	pop rsi
	xor rax, rax
	push rax
	pop rbx
	mov bl, 0x7
	push rax
	pop rcx
	mov cl, 154
decode_loop:
	xor [rsi+0], bl
	inc rsi
	loop decode_loop
	jmp code

enc_str:
	call decode
	code: db	0xa2,0x67,0x16,0x01,0x78,0x89,0xc1,0x2e,0x40,0x01,0xc0,0x36,0x43,0x01,0xc4,0x16,0x63,0x01,0xc0,0x16,0x5b,0xc1,0x2a,0x4b,0x01,0xc4,0x16,0x64,0x01,0xc0,0x16,0x53,0x01,0xc0,0x0e,0x6b,0x01,0xc4,0x3e,0x43,0x01,0xc4,0x1e,0x6b,0x4d,0x72,0x46,0x4c,0xa1,0x84,0xb6,0xb6,0xb6,0x66,0x2b,0x20,0x27,0x66,0x2b,0x28,0x3a,0x21,0x08,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x64,0x2a,0x0f,0x2c,0x2a,0x21,0x26,0x69,0x6b,0x0a,0x28,0x3b,0x24,0x2c,0x27,0x69,0x28,0x27,0x2d,0x69,0x03,0x2c,0x3b,0x3b,0x20,0x2d,0x69,0x21,0x2c,0x25,0x25,0x26,0x69,0x28,0x27,0x2d,0x69,0x28,0x25,0x25,0x69,0x3d,0x21,0x28,0x3d,0x6b,0x49
